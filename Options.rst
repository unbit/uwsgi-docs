
.. *********************************************************************
.. This page has been automatically generated by `_options/generate.py`!
.. *********************************************************************

Configuration Options
=====================

uWSGI and the various plugins it consists of is almost infinitely configurable.

There's an exhaustive and exhausting list of all options below. Take a deep breath and don't panic -- the list below is long, but you don't need to know everything to start using uWSGI.

.. :seealso:: :doc:`Quickstart`




.. _OptionsCore:

Networking/sockets
^^^^^^^^^^^^^^^^^^

.. _OptionSocket:

``socket``, ``uwsgi-socket``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Bind to the specified socket using default protocol (see `protocol`).

This option may be set with ``-s`` from the command line.

.. _OptionHttpSocket:

``http-socket``
~~~~~~~~~~~~~~~
**Argument:** string

Bind to the specified socket using HTTP.

.. _OptionFastcgiSocket:

``fastcgi-socket``
~~~~~~~~~~~~~~~~~~
**Argument:** string

Bind to the specified socket using FastCGI.

.. _OptionProtocol:

``protocol``, ``socket-protocol``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Force the specified protocol (`uwsgi`, `http`, `fastcgi`) for default sockets.

.. _OptionSharedSocket:

``shared-socket``
~~~~~~~~~~~~~~~~~
**Argument:** string

Create a shared socket for advanced jailing or IPC purposes.

Advanced option for plugin writers or special needs. Allows you to create a socket early in the server's startup and use it after privileges drop or jailing. This can be used to bind to privileged (<1024) ports.

.. _OptionListen:

``listen``
~~~~~~~~~~
**Argument:** number
**Default:** 100

Set the socket listen queue size.

This option may be set with ``-l`` from the command line.

Every socket has an associated queue where request will be put waiting for a process to became ready to accept them. When this queue is full, requests will be rejected.

The maximum value is system/kernel dependent.


.. _OptionAbstractSocket:

``abstract-socket``
~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Force UNIX socket into abstract mode (Linux only).

.. _OptionChmodSocket:

``chmod-socket``
~~~~~~~~~~~~~~~~
**Argument:** optional string

Chmod socket.

This option may be set with ``-C`` from the command line.

UNIX sockets are filesystem objects that obey UNIX permissions like any other filesystem object.
You can set the UNIX sockets' permissions with this option if your webserver would otherwise have no access to the uWSGI socket.
When used without a parameter, the permissions will be set to 666. Otherwise the specified chmod value will be used.

.. _OptionChownSocket:

``chown-socket``
~~~~~~~~~~~~~~~~
**Argument:** string

Chown UNIX sockets.

.. _OptionUmask:

``umask``
~~~~~~~~~
**Argument:** string

Set UNIX socket umask.

.. _OptionFreebind:

``freebind``
~~~~~~~~~~~~
**Argument:** no argument

Put socket in freebind mode (Linux only).

Allows binding to non-existent network addresses.

.. _OptionMapSocket:

``map-socket``
~~~~~~~~~~~~~~
**Argument:** string

Map sockets to specific workers.

*This option may be declared multiple times.*

As you can bind a uWSGI instance to multiple sockets, you can use this option to map specific workers to specific sockets to implement a sort of in-process Quality of Service scheme.

.. code-block: ini

   [uwsgi]
   socket = /tmp/uwsgi0.sock
   socket = /tmp/uwsgi1.sock
   workers = 5
   map-socket = 0:1,2,3
   map-socket = 1:4,5

This will map workers 1, 2 and 3 to the first socket and 4 and 5 to the second one.

If you host multiple apps in the same uWSGI instance, you can easily dedicate resources to each of them.



.. _OptionZeromq:

``zeromq``, ``zmq``, ``zeromq-socket``, ``zmq-socket``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Create a zeromq pub/sub pair.

.. _OptionUdp:

``udp``
~~~~~~~
**Argument:** string

Run the udp server on the specified address.

Mainly useful for SNMP or shared UDP logging.

.. seealso:: :doc:`Logging`, :doc:`SNMP`

.. _OptionReusePort:

``reuse-port``
~~~~~~~~~~~~~~
**Argument:** no argument

Enable REUSE_PORT flag on socket to allow multiple instances binding on the same address (BSD only).


Process Management
^^^^^^^^^^^^^^^^^^

.. _OptionWorkers:

``workers``, ``processes``
~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Spawn the specified number of workers/processes.

This option may be set with ``-p`` from the command line.

Set the number of workers for preforking mode.
This is the base for easy and safe concurrency in your app. More workers you add, more concurrent requests you can manage.
Each worker corresponds to a system process, so it consumes memory, choose carefully the right number. You can easily drop your system to its knees by setting a too high value.
Setting ``workers`` to a ridiculously high number will *not* magically make your application web scale -- quite the contrary.


.. _OptionHarakiri:

``harakiri``
~~~~~~~~~~~~
**Argument:** number

Harakiri timeout in seconds.

Every request that will take longer than the seconds specified in the harakiri timeout will be dropped and the corresponding worker is thereafter recycled.

.. _OptionHarakiriVerbose:

``harakiri-verbose``
~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Enable verbose Harakiri mode.

When a request is killed by Harakiri you will get a message in the uWSGI log.
Enabling this option will print additional info (for example, the current syscall will be reported on Linux platforms).


.. _OptionHarakiriNoArh:

``harakiri-no-arh``, ``no-harakiri-arh``, ``no-harakiri-after-req-hook``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Disallow Harakiri killings during after-request hook methods.

.. _OptionMuleHarakiri:

``mule-harakiri``
~~~~~~~~~~~~~~~~~
**Argument:** number

Set harakiri timeout for mule tasks.

.. _OptionMaster:

``master``
~~~~~~~~~~
**Argument:** no argument

Enable uWSGI master process.

This option may be set with ``-M`` from the command line.

.. _OptionReaper:

``reaper``
~~~~~~~~~~
**Argument:** no argument

Call waitpid(-1,...) after each request to get rid of zombies.

This option may be set with ``-r`` from the command line.

Enables reaper mode. After each request the server will call ``waitpid(-1)`` to get rid of zombie processes.
If you spawn subprocesses in your app and you happen to end up with zombie processes all over the place you can enable this option. (It really would be better if you could fix your application's process spawning usage though.)


.. _OptionMaxRequests:

``max-requests``
~~~~~~~~~~~~~~~~
**Argument:** number

Reload workers after the specified amount of managed requests (avoid memory leaks).

This option may be set with ``-R`` from the command line.

When a worker reaches this number of requests it will get recycled (killed and restarted). You can use this option to "dumb fight" memory leaks.
Also take a look at the ``reload-on-as`` and ``reload-on-rss`` options as they are more useful for memory leaks.


.. _OptionLimitAs:

``limit-as``
~~~~~~~~~~~~
**Argument:** number

Limit process address space (vsz) (in megabytes).

Limits the address space usage of each uWSGI (worker) process using POSIX/UNIX ``setrlimit()``.
For example, ``limit-as 256`` will disallow uWSGI processes to grow over 256MB of address space.
Address space is the virtual memory a process has access to. It does *not* correspond to physical memory.
Read and understand this page before enabling this option: http://en.wikipedia.org/wiki/Virtual_memory


.. _OptionLimitNproc:

``limit-nproc``
~~~~~~~~~~~~~~~
**Argument:** number

Limit the number of spawnable processes.

.. _OptionReloadOnAs:

``reload-on-as``
~~~~~~~~~~~~~~~~
**Argument:** number

Reload a worker if its address space usage is higher than the specified value (in megabytes).

.. _OptionReloadOnRss:

``reload-on-rss``
~~~~~~~~~~~~~~~~~
**Argument:** number

Reload a worker if its physical unshared memory is higher than the specified value (in megabytes).

.. _OptionEvilReloadOnAs:

``evil-reload-on-as``
~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Force the master to reload a worker if its address space is higher than specified megabytes (in megabytes).

.. _OptionEvilReloadOnRss:

``evil-reload-on-rss``
~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Force the master to reload a worker if its rss memory is higher than specified megabytes (in megabytes).

.. _OptionThreads:

``threads``
~~~~~~~~~~~
**Argument:** number

Run each worker in prethreaded mode with the specified number of threads per worker.

.. _OptionThreadStacksize:

``thread-stacksize``, ``threads-stacksize``, ``thread-stack-size``, ``threads-stack-size``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set threads stacksize.

.. _OptionCheckInterval:

``check-interval``
~~~~~~~~~~~~~~~~~~
**Argument:** number
**Default:** 1

Set the interval (in seconds) of master checks.

The master process makes a scan of subprocesses, etc. every N seconds. You can increase this time if you need to, but it's DISCOURAGED.


Process Management - Emperor
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. seealso::

   :doc:`Emperor`

.. _OptionEmperor:

``emperor``
~~~~~~~~~~~
**Argument:** string

Run as the Emperor, using the given configuration method.

*This option may be declared multiple times.*

.. _OptionEmperorFreq:

``emperor-freq``
~~~~~~~~~~~~~~~~
**Argument:** number
**Default:** 3

Set the Emperor scanning frequency in seconds.

.. _OptionEmperorPidfile:

``emperor-pidfile``
~~~~~~~~~~~~~~~~~~~
**Argument:** string

Write the Emperor pid in the specified file.

.. _OptionEmperorTyrant:

``emperor-tyrant``
~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Put the Emperor in Tyrant (multi-user hosting) mode.

.. _OptionEmperorStats:

``emperor-stats``, ``emperor-stats-server``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Run the imperial bureau of statistics on the given address:port.

.. _OptionEarlyEmperor:

``early-emperor``
~~~~~~~~~~~~~~~~~
**Argument:** no argument

Spawn the emperor before jailing and privilege dropping.

.. _OptionEmperorBroodlord:

``emperor-broodlord``
~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Run the emperor in Broodlord mode.

.. seealso:: :doc:`Broodlord`

.. _OptionEmperorThrottle:

``emperor-throttle``
~~~~~~~~~~~~~~~~~~~~
**Argument:** number
**Default:** 1000

Set throttling level (in milliseconds) for bad behaving vassals.

.. _OptionEmperorMaxThrottle:

``emperor-max-throttle``
~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number
**Default:** 180000

Set max throttling level (in milliseconds) for badly behaving vassals (default 3 minutes).

.. _OptionEmperorMagicExec:

``emperor-magic-exec``
~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Prefix vassals config files with exec as s:// if they have the executable bit.

.. _OptionImperialMonitorList:

``imperial-monitor-list``, ``imperial-monitors-list``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

List enabled imperial monitors.

.. _OptionVassalsInherit:

``vassals-inherit``
~~~~~~~~~~~~~~~~~~~
**Argument:** string

Add given config templates to vassals' config.

*This option may be declared multiple times.*

.. _OptionVassalsStartHook:

``vassals-start-hook``
~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Run the specified command before each vassal starts.

.. _OptionVassalsStopHook:

``vassals-stop-hook``
~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Run the specified command after vassal's death.

.. _OptionVassalSosBacklog:

``vassal-sos-backlog``
~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Ask emperor for sos if backlog queue has more items than the value specified.

.. _OptionHeartbeat:

``heartbeat``
~~~~~~~~~~~~~
**Argument:** number

(Vassal option) Announce vassal health to the emperor every N seconds.

.. _OptionEmperorRequiredHeartbeat:

``emperor-required-heartbeat``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number
**Default:** 30

Set the Emperor tolerance about heartbeats.

When a vassal asks for 'heartbeat mode' the emperor will also expect a 'heartbeat' at least every <secs> seconds.

.. _OptionAutoSnapshot:

``auto-snapshot``
~~~~~~~~~~~~~~~~~
**Argument:** optional number

Automatically make workers snapshot after reload.

.. seealso:: :doc:`Snapshot`

.. _OptionReloadMercy:

``reload-mercy``
~~~~~~~~~~~~~~~~
**Argument:** number

Set the maximum time (in seconds) a worker can take to reload/shutdown.

For example ``reload-mercy 8`` would brutally kill every worker that will not terminate itself within 8 seconds during graceful reload


Process Management - Zerg
^^^^^^^^^^^^^^^^^^^^^^^^^

.. seealso::

   :doc:`Zerg`

.. _OptionZerg:

``zerg``
~~~~~~~~
**Argument:** string

Attach to a zerg server.

*This option may be declared multiple times.*

.. _OptionZergFallback:

``zerg-fallback``
~~~~~~~~~~~~~~~~~
**Argument:** no argument

Fallback to normal sockets if the zerg server is not available.

.. _OptionZergServer:

``zerg-server``
~~~~~~~~~~~~~~~
**Argument:** string

Enable the zerg server on the specified UNIX socket.

.. _OptionZergpool:

``zergpool``, ``zerg-pool``
~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Start a zergpool on specified address for specified address (zergpool plugin).

*This option may be declared multiple times.*


Debugging
^^^^^^^^^

.. _OptionBacktraceDepth:

``backtrace-depth``
~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set backtrace depth.

.. _OptionMemoryReport:

``memory-report``
~~~~~~~~~~~~~~~~~
**Argument:** no argument

Enable memory usage report.

This option may be set with ``-m`` from the command line.

When enabled, diagnostic information about RSS and address space usage will be printed in the request log.

.. _OptionProfiler:

``profiler``
~~~~~~~~~~~~
**Argument:** string

Enable the specified profiler.

.. _OptionDumpOptions:

``dump-options``
~~~~~~~~~~~~~~~~
**Argument:** no argument

Dump the full list of available options.

.. _OptionShowConfig:

``show-config``
~~~~~~~~~~~~~~~
**Argument:** no argument

Show the current config reformatted as ini.

.. _OptionPrint:

``print``
~~~~~~~~~
**Argument:** string

Simple print (for your convenience).

.. _OptionCflags:

``cflags``
~~~~~~~~~~
**Argument:** no argument

Report uWSGI CFLAGS (useful for building external plugins).

.. _OptionVersion:

``version``
~~~~~~~~~~~
**Argument:** no argument

Print uWSGI version.

.. _OptionAllowedModifiers:

``allowed-modifiers``
~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Comma separated list of allowed modifiers for clients.

``allowed-modifiers 0,111`` would allow access to only the WSGI handler and the cache handler.

.. _OptionConnectAndRead:

``connect-and-read``
~~~~~~~~~~~~~~~~~~~~
**Argument:** *str*

Connect to a socket and wait for data from it.


Configuration
^^^^^^^^^^^^^

.. seealso::

   :doc:`Configuration`

.. _OptionSet:

``set``
~~~~~~~
**Argument:** string

Set a custom placeholder for configuration.

.. _OptionDeclareOption:

``declare-option``
~~~~~~~~~~~~~~~~~~
**Argument:** string

Declare a new custom uWSGI option.

.. _OptionInherit:

``inherit``
~~~~~~~~~~~
**Argument:** string

Use the specified file as configuration template.

.. _OptionInclude:

``include``
~~~~~~~~~~~
**Argument:** string

Include the specified file as if its configuration entries had been declared here (available post 1.3).

.. _OptionPlugins:

``plugins``, ``plugin``
~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Load uWSGI plugins (comma-separated).

*This option may be declared multiple times.*

.. _OptionPluginsDir:

``plugins-dir``, ``plugin-dir``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Add a directory to uWSGI plugin search path.

*This option may be declared multiple times.*

.. _OptionPluginsList:

``plugins-list``, ``plugin-list``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

List enabled plugins.

.. _OptionAutoload:

``autoload``
~~~~~~~~~~~~
**Argument:** no argument

Try to automatically load plugins when unknown options are found.

.. _OptionDlopen:

``dlopen``
~~~~~~~~~~
**Argument:** string

Blindly load a shared library.

.. _OptionIni:

``ini``
~~~~~~~
**Argument:** number

Load config from ini file.

.. _OptionXml:

``xml``, ``xmlconfig``
~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Load XML file as configuration.

This option may be set with ``-x`` from the command line.

.. _OptionYaml:

``yaml``, ``yal``
~~~~~~~~~~~~~~~~~
**Argument:** string

Load config from yaml file.

This option may be set with ``-y`` from the command line.

.. _OptionJson:

``json``, ``js``
~~~~~~~~~~~~~~~~
**Argument:** string

Load config from json file.

This option may be set with ``-j`` from the command line.

.. _OptionSqlite3:

``sqlite3``, ``sqlite``
~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Load config from sqlite3 db.

.. _OptionLdap:

``ldap``
~~~~~~~~
**Argument:** number

Load configuration from ldap server.

.. seealso:: :doc:`LDAP`

.. _OptionLdapSchema:

``ldap-schema``
~~~~~~~~~~~~~~~
**Argument:** no argument

Dump uWSGI ldap schema.

.. seealso:: :doc:`LDAP`

.. _OptionLdapSchemaLdif:

``ldap-schema-ldif``
~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Dump uWSGI ldap schema in ldif format.

.. seealso:: :doc:`LDAP`


Config logic
^^^^^^^^^^^^

.. seealso::

   :doc:`ConfigLogic`

.. _OptionFor:

``for``
~~~~~~~
**Argument:** string

For cycle.

.. _OptionEndfor:

``endfor``
~~~~~~~~~~
**Argument:** optional string

End for cycle.

.. _OptionIfOpt:

``if-opt``
~~~~~~~~~~
**Argument:** string

Check for option.

.. _OptionIfNotOpt:

``if-not-opt``
~~~~~~~~~~~~~~
**Argument:** string

Check for lack of option.

.. _OptionIfEnv:

``if-env``, ``ifenv``
~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Check for environment variable.

.. _OptionIfNotEnv:

``if-not-env``
~~~~~~~~~~~~~~
**Argument:** string

Check for lack of environment variable.

.. _OptionIfReload:

``if-reload``
~~~~~~~~~~~~~
**Argument:** string

Check for reload.

.. _OptionIfNotReload:

``if-not-reload``
~~~~~~~~~~~~~~~~~
**Argument:** string

Check for lack of reload.

.. _OptionIfExists:

``if-exists``, ``ifexists``
~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Check for file/directory existence.

.. _OptionIfNotExists:

``if-not-exists``
~~~~~~~~~~~~~~~~~
**Argument:** string

Check for file/directory inexistence.

.. _OptionIfFile:

``if-file``
~~~~~~~~~~~
**Argument:** string

Check for file existence.

.. _OptionIfNotFile:

``if-not-file``
~~~~~~~~~~~~~~~
**Argument:** string

Check for file inexistence.

.. _OptionIfDir:

``if-dir``, ``ifdir``, ``if-directory``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Check for directory existence.

.. _OptionIfNotDir:

``if-not-dir``
~~~~~~~~~~~~~~
**Argument:** string

Check for directory inexistence.

.. _OptionEndif:

``endif``
~~~~~~~~~
**Argument:** optional string

End if block.


Logging
^^^^^^^

.. seealso::

   :doc:`Logging`

.. _OptionDisableLogging:

``disable-logging``
~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Disable request logging.

This option may be set with ``-L`` from the command line.

When enabled, only uWSGI internal messages and errors are logged.

.. _OptionIgnoreSigpipe:

``ignore-sigpipe``
~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Do not report (annoying) SIGPIPE.

.. _OptionIgnoreWriteErrors:

``ignore-write-errors``
~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Do not report (annoying) write()/writev() errors.

.. _OptionWriteErrorsTolerance:

``write-errors-tolerance``
~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set the maximum number of allowed write errors (default: no tolerance).

.. _OptionWriteErrorsExceptionOnly:

``write-errors-exception-only``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Only raise an exception on write errors giving control to the app itself.

.. _OptionDisableWriteException:

``disable-write-exception``
~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Disable exception generation on write()/writev().

.. _OptionLogto:

``logto``
~~~~~~~~~
**Argument:** string

Set logfile/udp address.

.. _OptionLogto2:

``logto2``
~~~~~~~~~~
**Argument:** string

Log to specified file or udp address after privileges drop.

.. _OptionLogFormat:

``log-format``, ``logformat``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Set advanced format for request logging.

.. _OptionLogformatStrftime:

``logformat-strftime``, ``log-format-strftime``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Apply strftime to logformat output.

.. _OptionLogfileChown:

``logfile-chown``
~~~~~~~~~~~~~~~~~
**Argument:** no argument

Chown logfiles.

.. _OptionLogfileChmod:

``logfile-chmod``
~~~~~~~~~~~~~~~~~
**Argument:** string

Chmod logfiles.

.. _OptionLogSyslog:

``log-syslog``
~~~~~~~~~~~~~~
**Argument:** optional string

Log to syslog.

Passing a parameter makes uwsgi use the parameter as program-name in the syslog entry header.

.. _OptionLogSocket:

``log-socket``
~~~~~~~~~~~~~~
**Argument:** string

Send logs to the specified socket.

.. _OptionLogger:

``logger``
~~~~~~~~~~
**Argument:** string

Set/append a logger.

*This option may be declared multiple times.*

.. _OptionLoggerList:

``logger-list``, ``loggers-list``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

List enabled loggers.

.. _OptionThreadedLogger:

``threaded-logger``
~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Offload log writing to a thread.

.. _OptionLogDrain:

``log-drain``
~~~~~~~~~~~~~
**Argument:** *regexp*

Drain (do not show) log lines matching the specified regexp.

*This option may be declared multiple times.*

.. _OptionLogZeromq:

``log-zeromq``
~~~~~~~~~~~~~~
**Argument:** string

Send logs to a ZeroMQ server.

.. _OptionLogMaster:

``log-master``
~~~~~~~~~~~~~~
**Argument:** no argument

Delegate logging to master process.

Delegate the write of the logs to the master process (this will put all of the logging I/O to a single process). Useful for system with advanced I/O schedulers/elevators.

.. _OptionLogMasterBufsize:

``log-master-bufsize``
~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set the buffer size for the master logger. Log messages larger than this will be truncated.

.. _OptionLogReopen:

``log-reopen``
~~~~~~~~~~~~~~
**Argument:** no argument

Reopen log after reload.

.. _OptionLogTruncate:

``log-truncate``
~~~~~~~~~~~~~~~~
**Argument:** no argument

Truncate log on startup.

.. _OptionLogMaxsize:

``log-maxsize``
~~~~~~~~~~~~~~~
**Argument:** number

Set maximum logfile size.

.. _OptionLogBackupname:

``log-backupname``
~~~~~~~~~~~~~~~~~~
**Argument:** string

Set logfile name after rotation.

.. _OptionLogPrefix:

``log-prefix``, ``logdate``, ``log-date``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** optional string

Prefix log lines with date (without argument) or a strftime string.

.. _OptionLogZero:

``log-zero``
~~~~~~~~~~~~
**Argument:** no argument

Log responses without body (zero response size).

.. _OptionLogSlow:

``log-slow``
~~~~~~~~~~~~
**Argument:** number

Log requests slower than the specified number of milliseconds.

.. _OptionLog4Xx:

``log-4xx``
~~~~~~~~~~~
**Argument:** no argument

Log requests with a 4xx response.

.. _OptionLog5Xx:

``log-5xx``
~~~~~~~~~~~
**Argument:** no argument

Log requests with a 5xx response.

.. _OptionLogBig:

``log-big``
~~~~~~~~~~~
**Argument:** number

Log requestes bigger than the specified size in bytes.

.. _OptionLogSendfile:

``log-sendfile``
~~~~~~~~~~~~~~~~
**Argument:** no argument

Log sendfile requests.

.. _OptionLogMicros:

``log-micros``
~~~~~~~~~~~~~~
**Argument:** no argument

Report response time in microseconds instead of milliseconds.

.. _OptionLogXForwardedFor:

``log-x-forwarded-for``
~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Use the ip from X-Forwarded-For header instead of REMOTE_ADDR. Used when uWSGI is run behind multiple proxies.

.. _OptionStats:

``stats``, ``stats-server``
~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Enable the stats server on the specified address.

.. _OptionSslVerbose:

``ssl-verbose``
~~~~~~~~~~~~~~~
**Argument:** no argument

Be verbose about SSL errors.

.. _OptionSnmp:

``snmp``
~~~~~~~~
**Argument:** string

Enable the embedded SNMP server.

*This option may be declared multiple times.*

.. seealso:: :doc:`SNMP`

.. _OptionSnmpCommunity:

``snmp-community``
~~~~~~~~~~~~~~~~~~
**Argument:** string

Set the SNMP community string.


Alarms
^^^^^^

.. seealso::

   :doc:`AlarmSubsystem`

.. _OptionAlarm:

``alarm``
~~~~~~~~~
**Argument:** string

Create a new alarm. Syntax: <alarm> <plugin:args>.

*This option may be declared multiple times.*

.. _OptionAlarmFreq:

``alarm-freq``
~~~~~~~~~~~~~~
**Argument:** number

Tune the alarm anti-loop system (default 3 seconds).

.. _OptionLogAlarm:

``log-alarm``
~~~~~~~~~~~~~
**Argument:** string

Raise the specified alarm when a log line matches the specified regexp, syntax: <alarm>[,alarm...] <regexp>.

*This option may be declared multiple times.*

.. _OptionAlarmList:

``alarm-list``, ``alarms-list``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

List enabled alarms.


uWSGI Process
^^^^^^^^^^^^^

.. _OptionDaemonize:

``daemonize``
~~~~~~~~~~~~~
**Argument:** *logfile*

Daemonize uWSGI and write messages into given log file or UDP socket address.

.. seealso:: :doc:`Logging`

.. _OptionDaemonize2:

``daemonize2``
~~~~~~~~~~~~~~
**Argument:** *logfile*

Daemonize uWSGI after loading application, write messages into given log file or UDP socket address.

.. seealso:: :doc:`Logging`

.. _OptionStop:

``stop``
~~~~~~~~
**Argument:** *pidfile*

Send the stop (SIGINT) signal to the instance described by the pidfile.

.. seealso:: :doc:`Management`

.. _OptionReload:

``reload``
~~~~~~~~~~
**Argument:** *pidfile*

Send the reload (SIGHUP) signal to the instance described by the pidfile.

.. seealso:: :doc:`Management`

.. _OptionPause:

``pause``
~~~~~~~~~
**Argument:** *pidfile*

Send the pause (SIGTSTP) signal to the instance described by the pidfile.

.. seealso:: :doc:`Management`

.. _OptionSuspend:

``suspend``
~~~~~~~~~~~
**Argument:** *pidfile*

Send the suspend (SIGTSTP) signal to the instance described by the pidfile.

.. seealso:: :doc:`Management`

.. _OptionResume:

``resume``
~~~~~~~~~~
**Argument:** *pidfile*

Send the resume (SIGTSTP) signal to the instance described by the pidfile.

.. seealso:: :doc:`Management`

.. _OptionAutoProcname:

``auto-procname``
~~~~~~~~~~~~~~~~~
**Argument:** no argument

Automatically set process name to something meaningful.

Generated process names may be 'uWSGI Master', 'uWSGI Worker #', etc.

.. _OptionProcnamePrefix:

``procname-prefix``
~~~~~~~~~~~~~~~~~~~
**Argument:** string

Add prefix to process names.

.. _OptionProcnamePrefixSpaced:

``procname-prefix-spaced``
~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Add spaced prefix to process names.

.. _OptionProcnameAppend:

``procname-append``
~~~~~~~~~~~~~~~~~~~
**Argument:** string

Append string to process names.

.. _OptionProcname:

``procname``
~~~~~~~~~~~~
**Argument:** string

Set process name to given value.

.. _OptionProcnameMaster:

``procname-master``
~~~~~~~~~~~~~~~~~~~
**Argument:** string

Set master process name to given value.

.. _OptionPidfile:

``pidfile``
~~~~~~~~~~~
**Argument:** string

Create pidfile (before privileges drop).

.. _OptionPidfile2:

``pidfile2``
~~~~~~~~~~~~
**Argument:** string

Create pidfile (after privileges drop).

.. _OptionChroot:

``chroot``
~~~~~~~~~~
**Argument:** string

Chroot() to the specified directory.

.. _OptionUid:

``uid``
~~~~~~~
**Argument:** *username|uid*

Setuid to the specified user/uid.

.. _OptionGid:

``gid``
~~~~~~~
**Argument:** *groupname|gid*

Setgid to the specified grooup/gid.

.. _OptionNoInitgroups:

``no-initgroups``
~~~~~~~~~~~~~~~~~
**Argument:** no argument

Disable additional groups set via initgroups().

.. _OptionCap:

``cap``
~~~~~~~
**Argument:** string

Set process capability.

.. _OptionUnshare:

``unshare``
~~~~~~~~~~~
**Argument:** string

Unshare() part of the processes and put it in a new namespace.

.. _OptionExecPreJail:

``exec-pre-jail``
~~~~~~~~~~~~~~~~~
**Argument:** string

Run the specified command before jailing.

*This option may be declared multiple times.*

.. _OptionExecPostJail:

``exec-post-jail``
~~~~~~~~~~~~~~~~~~
**Argument:** string

Run the specified command after jailing.

*This option may be declared multiple times.*

.. _OptionExecInJail:

``exec-in-jail``
~~~~~~~~~~~~~~~~
**Argument:** string

Run the specified command in jail after initialization.

*This option may be declared multiple times.*

.. _OptionExecAsRoot:

``exec-as-root``
~~~~~~~~~~~~~~~~
**Argument:** string

Run the specified command before privileges drop.

*This option may be declared multiple times.*

.. _OptionExecAsUser:

``exec-as-user``
~~~~~~~~~~~~~~~~
**Argument:** string

Run the specified command after privileges drop.

*This option may be declared multiple times.*

.. _OptionExecAsUserAtexit:

``exec-as-user-atexit``
~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Run the specified command before app exit and reload.

*This option may be declared multiple times.*

.. _OptionExecPreApp:

``exec-pre-app``
~~~~~~~~~~~~~~~~
**Argument:** string

Run the specified command before app loading.

*This option may be declared multiple times.*

.. _OptionCgroup:

``cgroup``
~~~~~~~~~~
**Argument:** string

Put the processes in the specified cgroup (Linux only).

*This option may be declared multiple times.*

.. seealso:: :doc:`Cgroups`

.. _OptionCgroupOpt:

``cgroup-opt``
~~~~~~~~~~~~~~
**Argument:** string

Set value in specified cgroup option.

*This option may be declared multiple times.*

.. seealso:: :doc:`Cgroups`

.. _OptionNamespace:

``namespace``, ``ns``
~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Run in a new namespace under the specified rootfs.

.. seealso:: :doc:`Namespaces`

.. _OptionNamespaceKeepMount:

``namespace-keep-mount``
~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** *<mount>[:<jailed-mountpoint>]*

Keep the specified mountpoint in your namespace, optionally renaming it.

.. seealso:: :doc:`Namespaces`

.. _OptionNamespaceNet:

``namespace-net``, ``ns-net``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Add network namespace.

.. _OptionForkbombDelay:

``forkbomb-delay``
~~~~~~~~~~~~~~~~~~
**Argument:** number

Sleep for the specified number of seconds when a forkbomb is detected.

.. _OptionBinaryPath:

``binary-path``
~~~~~~~~~~~~~~~
**Argument:** string

Force binary path.

If you do not have uWSGI in the system path you can force its path with this option to permit the reloading system and the Emperor to easily find the binary to execute.

.. _OptionPrivilegedBinaryPatch:

``privileged-binary-patch``
~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Patch the uwsgi binary with a new command (before privileges drop).

.. _OptionUnprivilegedBinaryPatch:

``unprivileged-binary-patch``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Patch the uwsgi binary with a new command (after privileges drop).

.. _OptionPrivilegedBinaryPatchArg:

``privileged-binary-patch-arg``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Patch the uwsgi binary with a new command and arguments (before privileges drop).

.. _OptionUnprivilegedBinaryPatchArg:

``unprivileged-binary-patch-arg``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Patch the uwsgi binary with a new command and arguments (after privileges drop).

.. _OptionAsync:

``async``
~~~~~~~~~
**Argument:** number

Enable async mode with specified cores.

.. seealso:: :doc:`Async`

.. _OptionMaxFd:

``max-fd``
~~~~~~~~~~
**Argument:** number

Set maximum number of file descriptors (requires root privileges).

.. _OptionMasterAsRoot:

``master-as-root``
~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Leave master process running as root.


Miscellaneous
^^^^^^^^^^^^^

.. _OptionSkipZero:

``skip-zero``
~~~~~~~~~~~~~
**Argument:** no argument

Skip check of file descriptor 0.

.. _OptionNeedApp:

``need-app``
~~~~~~~~~~~~
**Argument:** no argument

Exit if no app can be loaded.

.. _OptionExitOnReload:

``exit-on-reload``
~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Force exit even if a reload is requested.

.. _OptionDieOnTerm:

``die-on-term``
~~~~~~~~~~~~~~~
**Argument:** no argument

Exit instead of brutal reload on SIGTERM.

.. _OptionNoFdPassing:

``no-fd-passing``
~~~~~~~~~~~~~~~~~
**Argument:** no argument

Disable file descriptor passing.

.. _OptionSingleInterpreter:

``single-interpreter``
~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Do not use multiple interpreters (where available).

This option may be set with ``-i`` from the command line.

Some of the supported languages (such as Python) have the concept of "multiple interpreters".
This feature allows you to isolate apps living in the same process. If you do not want this kind of feature use this option.


.. _OptionMaxApps:

``max-apps``
~~~~~~~~~~~~
**Argument:** number

Set the maximum number of per-worker applications.

.. _OptionSharedarea:

``sharedarea``
~~~~~~~~~~~~~~
**Argument:** number

Create a raw shared memory area of specified number of pages.

This option may be set with ``-A`` from the command line.

This enables the SharedArea. This is a low level shared memory. If you want a more usable/user-friendly system look at the caching framework.

.. seealso:: :doc:`SharedArea`

.. _OptionCgiMode:

``cgi-mode``
~~~~~~~~~~~~
**Argument:** no argument

Force CGI-mode for plugins supporting it.

This option may be set with ``-c`` from the command line.

When enabled, responses generated by uWSGI will not be HTTP responses, but CGI ones; namely, the ``Status:`` header will be added.

.. _OptionBufferSize:

``buffer-size``
~~~~~~~~~~~~~~~
**Argument:** number
**Default:** 4096

Set the internal buffer size for uwsgi packet parsing.

This option may be set with ``-b`` from the command line.

If you plan to receive big requests with lots of headers you can increase this value up to 64k (65535).

.. _OptionEnableThreads:

``enable-threads``
~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Enable threads.

This option may be set with ``-T`` from the command line.

Enable threads in the embedded languages. This will allow to spawn threads in your app.

.. warning::

   Threads will simply *not work* if this option is not enabled. There will likely be no error, just no execution of your thread code.



.. _OptionSignalBufsize:

``signal-bufsize``, ``signals-bufsize``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set buffer size for signal queue.

.. _OptionSocketTimeout:

``socket-timeout``
~~~~~~~~~~~~~~~~~~
**Argument:** number
**Default:** 4

Set internal sockets timeout in seconds.

This option may be set with ``-z`` from the command line.

.. _OptionMaxVars:

``max-vars``
~~~~~~~~~~~~
**Argument:** number

Set the amount of internal iovec/vars structures for uwsgi clients (web servers, etc.).

This option may be set with ``-v`` from the command line.

This is only a security measure you will probably never need to touch.

.. _OptionWeight:

``weight``
~~~~~~~~~~
**Argument:** number

Weight of the instance (used by clustering/lb/subscriptions).

.. _OptionAutoWeight:

``auto-weight``
~~~~~~~~~~~~~~~
**Argument:** number

Set weight of the instance (used by clustering/lb/subscriptions) automatically.

.. _OptionNoServer:

``no-server``
~~~~~~~~~~~~~
**Argument:** no argument

Initialize the uWSGI server but exit as soon as the initialization is complete (useful for testing).

.. _OptionCommandMode:

``command-mode``
~~~~~~~~~~~~~~~~
**Argument:** no argument

Force command mode.

.. _OptionNoDeferAccept:

``no-defer-accept``
~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Disable deferred ``accept()`` on sockets.

by default (where available) uWSGI will defer the accept() of requests until some data is sent by the client (this is a security/performance measure). If you want to disable this feature for some reason, specify this option.

.. _OptionSoKeepalive:

``so-keepalive``
~~~~~~~~~~~~~~~~
**Argument:** no argument

Enable TCP KEEPALIVEs.

.. _OptionNeverSwap:

``never-swap``
~~~~~~~~~~~~~~
**Argument:** no argument

Lock all memory pages avoiding swapping.

.. _OptionKsm:

``ksm``
~~~~~~~
**Argument:** number

Enable Linux KSM.

*This option may be declared multiple times.*

.. _OptionTouchReload:

``touch-reload``
~~~~~~~~~~~~~~~~
**Argument:** string

Reload uWSGI if the specified file or directory is modified/touched.

*This option may be declared multiple times.*

.. _OptionTouchLogrotate:

``touch-logrotate``
~~~~~~~~~~~~~~~~~~~
**Argument:** string

Trigger logrotation if the specified file is modified/touched.

*This option may be declared multiple times.*

.. _OptionTouchLogreopen:

``touch-logreopen``
~~~~~~~~~~~~~~~~~~~
**Argument:** string

Trigger log reopen if the specified file is modified/touched.

*This option may be declared multiple times.*

.. _OptionPropagateTouch:

``propagate-touch``
~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Over-engineering option for system with flaky signal mamagement.

.. _OptionNoOrphans:

``no-orphans``
~~~~~~~~~~~~~~
**Argument:** no argument

Automatically kill workers if master dies (can be dangerous for availability).

.. _OptionPrio:

``prio``
~~~~~~~~
**Argument:** number

Set processes/threads priority (``nice``) value.

.. _OptionCpuAffinity:

``cpu-affinity``
~~~~~~~~~~~~~~~~
**Argument:** *number of cores for each worker (Linux only)*

Set CPU affinity.

Set the number of cores (CPUs) to allocate to each worker process.

For example

* With 4 workers, 4 CPUs and ``cpu-affinity`` is 1, each worker is allocated one CPU.
* With 4 workers, 2 CPUs and ``cpu-affinity`` is 1, workers get one CPU each (0; 1; 0; 1).
* With 4 workers, 4 CPUs and ``cpu-affinity`` is 2, workers get two CPUs each in a round-robin fashion (0, 1; 2, 3; 0, 1; 2; 3).
* With 8 workers, 4 CPUs and ``cpu-affinity`` is 3, workers get three CPUs each in a round-robin fashion (0, 1, 2; 3, 0, 1; 2, 3, 0; 1, 2, 3; 0, 1, 2; 3, 0, 1; 2, 3, 0; 1, 2, 3).



.. _OptionRemapModifier:

``remap-modifier``
~~~~~~~~~~~~~~~~~~
**Argument:** string

Remap request modifier from one id to another (old-id:new-id).

.. _OptionEnv:

``env``
~~~~~~~
**Argument:** string

Set environment variable (key=value).

.. _OptionUnenv:

``unenv``
~~~~~~~~~
**Argument:** string

Set environment variable (key).

.. _OptionCloseOnExec:

``close-on-exec``
~~~~~~~~~~~~~~~~~
**Argument:** no argument

Set close-on-exec on sockets (could be required for spawning processes in requests).

.. _OptionMode:

``mode``
~~~~~~~~
**Argument:** string

Set uWSGI custom mode.

Generic `mode` option that is passed down to applications as ``uwsgi.mode`` (or similar for other languages)

.. _OptionVacuum:

``vacuum``
~~~~~~~~~~
**Argument:** no argument

Try to remove all of the generated files/sockets (UNIX sockets and pidfiles) upon exit.

.. _OptionCron:

``cron``
~~~~~~~~
**Argument:** string

Add a cron task.

.. _OptionWorkerExec:

``worker-exec``
~~~~~~~~~~~~~~~
**Argument:** string

Run the specified command as worker instead of uWSGI itself.

This could be used to run a PHP FastCGI server pool::

    /usr/bin/uwsgi --workers 4 --worker-exec /usr/bin/php53-cgi 



.. _OptionAttachDaemon:

``attach-daemon``
~~~~~~~~~~~~~~~~~
**Argument:** string

Attach a command/daemon to the master process (the command has to remain in foreground).

This will allow the uWSGI master to control/monitor/respawn this process.

A typical usage is attaching a ``memcached`` instance::

    [uwsgi]
    master = true
    attach-daemon = memcached



.. _OptionSmartAttachDaemon:

``smart-attach-daemon``
~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** *pidfile*

Attach a command/daemon to the master process managed by a pidfile (the command must daemonize).

.. _OptionSmartAttachDaemon2:

``smart-attach-daemon2``
~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** *pidfile*

Attach a command/daemon to the master process managed by a pidfile (the command must NOT daemonize).


Locks
^^^^^

.. seealso::

   :doc:`Locks`

.. _OptionLocks:

``locks``
~~~~~~~~~
**Argument:** number

Create the specified number of shared locks.

.. _OptionLockEngine:

``lock-engine``
~~~~~~~~~~~~~~~
**Argument:** string

Set the lock engine.

.. _OptionFtok:

``ftok``
~~~~~~~~
**Argument:** string

Set the ipcsem key via ftok() for avoiding duplicates.

.. _OptionFlock:

``flock``
~~~~~~~~~
**Argument:** string

Lock the specified file before starting, exit if locked.

.. _OptionFlockWait:

``flock-wait``
~~~~~~~~~~~~~~
**Argument:** string

Lock the specified file before starting, wait if locked.

.. _OptionFlock2:

``flock2``
~~~~~~~~~~
**Argument:** string

Lock the specified file after logging/daemon setup, exit if locked.

.. _OptionFlockWait2:

``flock-wait2``
~~~~~~~~~~~~~~~
**Argument:** string

Lock the specified file after logging/daemon setup, wait if locked.


Cache
^^^^^

.. seealso::

   :doc:`Caching`

.. _OptionCache:

``cache``
~~~~~~~~~
**Argument:** number

Create a shared cache containing given elements.

.. _OptionCacheBlocksize:

``cache-blocksize``
~~~~~~~~~~~~~~~~~~~
**Argument:** number
**Default:** 65536

Set the cache block size in bytes. It's a good idea to use a multiple of 4096 (common memory page size).

.. _OptionCacheStore:

``cache-store``
~~~~~~~~~~~~~~~
**Argument:** string

Enable persistent cache to disk.

.. _OptionCacheStoreSync:

``cache-store-sync``
~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set frequency of sync for persistent cache.

.. _OptionCacheServer:

``cache-server``
~~~~~~~~~~~~~~~~
**Argument:** string

Enable the threaded cache server.

.. _OptionCacheServerThreads:

``cache-server-threads``
~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set the number of threads for the cache server.

.. _OptionCacheNoExpire:

``cache-no-expire``
~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Disable auto sweep of expired items.

.. _OptionCacheExpireFreq:

``cache-expire-freq``
~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set the frequency of cache sweeper scans (default 3 seconds).

.. _OptionCacheReportFreedItems:

``cache-report-freed-items``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Constantly report the cache item freed by the sweeper (use only for debug).


Queue
^^^^^

.. seealso::

   :doc:`Queue`

.. _OptionQueue:

``queue``
~~~~~~~~~
**Argument:** number

Enable the shared queue with the given size.

.. _OptionQueueBlocksize:

``queue-blocksize``
~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set the block size for the queue.

.. _OptionQueueStore:

``queue-store``
~~~~~~~~~~~~~~~
**Argument:** *filename*

Enable periodical persisting of the queue to disk.

.. _OptionQueueStoreSync:

``queue-store-sync``
~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set periodical persisting frequency in seconds.


Spooler
^^^^^^^

.. seealso::

   :doc:`Spooler`

.. _OptionSpooler:

``spooler``
~~~~~~~~~~~
**Argument:** string

Run a spooler on the specified directory.

This option may be set with ``-Q`` from the command line.

.. _OptionSpoolerExternal:

``spooler-external``
~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Map spooler requests to a spooler directory, but do not start a spooler (spooling managed by external instance).

.. _OptionSpoolerOrdered:

``spooler-ordered``
~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Try to order the execution of spooler tasks.

.. _OptionSpoolerChdir:

``spooler-chdir``
~~~~~~~~~~~~~~~~~
**Argument:** string

Chdir() to specified directory before each spooler task.

.. _OptionSpoolerProcesses:

``spooler-processes``
~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set the number of processes for spoolers.

.. _OptionSpoolerQuiet:

``spooler-quiet``
~~~~~~~~~~~~~~~~~
**Argument:** no argument

Do not be verbose with spooler tasks.

.. _OptionSpoolerMaxTasks:

``spooler-max-tasks``
~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set the maximum number of tasks to run before recycling a spooler.

.. _OptionSpoolerHarakiri:

``spooler-harakiri``
~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set harakiri timeout for spooler tasks.


Mules
^^^^^

.. seealso::

   :doc:`Mules`

.. _OptionMule:

``mule``
~~~~~~~~
**Argument:** string

Add a mule (signal-only mode without argument).

*This option may be declared multiple times.*

.. _OptionMules:

``mules``
~~~~~~~~~
**Argument:** number

Add the specified number of mules.

.. _OptionFarm:

``farm``
~~~~~~~~
**Argument:** string

Add a mule farm.

.. _OptionSignal:

``signal``
~~~~~~~~~~
**Argument:** string

Send a uwsgi signal to a server.


Application loading
^^^^^^^^^^^^^^^^^^^

.. _OptionChdir:

``chdir``
~~~~~~~~~
**Argument:** string

Chdir to specified directory before apps loading.

.. _OptionChdir2:

``chdir2``
~~~~~~~~~~
**Argument:** string

Chdir to specified directory after apps loading.

.. _OptionLazy:

``lazy``
~~~~~~~~
**Argument:** no argument

Set lazy mode (load apps in workers instead of master).

This option may have memory usage implications as Copy-on-Write semantics can not be used.
When ``lazy`` is enabled, only workers will be reloaded by uWSGI's reload signals; the master will remain alive. As such, uWSGI configuration changes are not picked up on reload by the master.

.. _OptionLazyApps:

``lazy-apps``
~~~~~~~~~~~~~
**Argument:** no argument

Load apps in each worker instead of the master.

This option may have memory usage implications as Copy-on-Write semantics can not be used.
Unlike ``lazy``, this only affects the way applications are loaded, not master's behavior on reload.

.. _OptionCheap:

``cheap``
~~~~~~~~~
**Argument:** no argument

Set cheap mode (spawn workers only after the first request).

.. _OptionCheaper:

``cheaper``
~~~~~~~~~~~
**Argument:** number

Set cheaper mode (adaptive process spawning).

This an advanced `cheap` mode. This will only spawn <n> workers on startup and will use various (pluggable) algorithms to implement adaptive process spawning.

.. _OptionCheaperInitial:

``cheaper-initial``
~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set the initial number of processes to spawn in cheaper mode.

.. _OptionCheaperAlgo:

``cheaper-algo``
~~~~~~~~~~~~~~~~
**Argument:** string

Choose to algorithm used for adaptive process spawning).

.. _OptionCheaperStep:

``cheaper-step``
~~~~~~~~~~~~~~~~
**Argument:** number

Number of additional processes to spawn at each overload.

.. _OptionCheaperOverload:

``cheaper-overload``
~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Increase workers after specified overload.

.. _OptionCheaperAlgoList:

``cheaper-algo-list``, ``cheaper-algos-list``, ``cheaper-list``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

List enabled 'cheaper' algorithms.

.. _OptionIdle:

``idle``
~~~~~~~~
**Argument:** number

Set idle mode (put uWSGI in cheap mode after inactivity).

.. _OptionDieOnIdle:

``die-on-idle``
~~~~~~~~~~~~~~~
**Argument:** no argument

Shutdown uWSGI when idle.

.. _OptionMount:

``mount``
~~~~~~~~~
**Argument:** */mountpoint=/app/path*

Load application under mountpoint.

Example: ``mount /pinax=/var/www/pinax/deploy/pinax.wsgi``

.. _OptionWorkerMount:

``worker-mount``
~~~~~~~~~~~~~~~~
**Argument:** string

Load application under mountpoint in the specified worker or after workers spawn.

*This option may be declared multiple times.*

.. _OptionGrunt:

``grunt``
~~~~~~~~~
**Argument:** no argument

Enable grunt mode (in-request fork).


Request handling
^^^^^^^^^^^^^^^^

.. _OptionLimitPost:

``limit-post``
~~~~~~~~~~~~~~
**Argument:** number

Limit request body (bytes) based on the ``CONTENT_LENGTH`` uwsgi var.

.. _OptionPostBuffering:

``post-buffering``
~~~~~~~~~~~~~~~~~~
**Argument:** number

Enable post buffering past N bytes.

Enables HTTP body buffering. uWSGI will save to disk all HTTP bodies larger than the limit specified.
This option is required and auto-enabled for Ruby Rack applications as they require a rewindable input stream.


.. _OptionPostBufferingBufsize:

``post-buffering-bufsize``
~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set buffer size for read() in post buffering mode.

This is an advanced option you probably won't need to touch.

.. _OptionUploadProgress:

``upload-progress``
~~~~~~~~~~~~~~~~~~~
**Argument:** string

Enable creation of .json files in the specified directory during a file upload.

Enable the embedded upload progress system.

Pass the name of a directory where uWSGI has write permissions into.

For every upload with a ``X-Progress-ID`` query string ("GET") parameter, a JSON file will be written to this directory containing the status of the upload.
AJAX calls can then be used to read these files.

For instance, when ``upload-progress`` is set to ``/var/www/progress`` the user uploads a file to the URL::

  /upload?X-Progress-ID=550e8400-e29b-41d4-a716-446655440000

uWSGI find ``X-Progress-ID`` in the query string and create a file called :file:`/var/www/progress/550e8400-e29b-41d4-a716-446655440000.js` containing something like::

  {"state": "uploading", "received": 170000, "size": 300000}

If :file:`/var/www/progress` has been mapped to the ``/progress`` path in your web server, you can then request this file at ``/progress/550e8400-e29b-41d4-a716-446655440000.js``.

It's likely that your web server supports similar functionality (Nginx does, at least), but the uWSGI implementation is ostensibly more controllable and hackable.


.. _OptionNoDefaultApp:

``no-default-app``
~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Do not fallback to default app.

By default, when uWSGI does not find a corresponding app for the specified ``SCRIPT_NAME`` variable, it will use the default app
(most of the time the app mounted under /). Enabling this option will return an error in case of unavailable app.


.. _OptionManageScriptName:

``manage-script-name``
~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Automatically rewrite SCRIPT_NAME and PATH_INFO.

If for some reason your webserver cannot manage ``SCRIPT_NAME`` on its own you can force uWSGI to rebuild the ``PATH_INFO`` variable automatically from it.

.. _OptionIgnoreScriptName:

``ignore-script-name``
~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Ignore SCRIPT_NAME.

.. _OptionCatchExceptions:

``catch-exceptions``
~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Report exception as HTTP output.

.. warning::

   This option is heavily discouraged as it is a definite security risk.



.. _OptionReloadOnException:

``reload-on-exception``
~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Reload a worker when an exception is raised.

.. _OptionReloadOnExceptionType:

``reload-on-exception-type``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Reload a worker when a specific exception type is raised.

*This option may be declared multiple times.*

.. _OptionReloadOnExceptionValue:

``reload-on-exception-value``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Reload a worker when a specific exception value is raised.

*This option may be declared multiple times.*

.. _OptionReloadOnExceptionRepr:

``reload-on-exception-repr``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Reload a worker when a specific exception type+value (language-specific) is raised.

*This option may be declared multiple times.*

.. _OptionAddHeader:

``add-header``
~~~~~~~~~~~~~~
**Argument:** string

Automatically add HTTP headers to response.

*This option may be declared multiple times.*

.. _OptionVhost:

``vhost``
~~~~~~~~~
**Argument:** no argument

Enable virtualhosting mode (based on SERVER_NAME variable).

.. seealso:: :doc:`VirtualHosting`

.. _OptionVhostHost:

``vhost-host``
~~~~~~~~~~~~~~
**Argument:** no argument

Enable virtualhosting mode (based on HTTP_HOST variable).

By default the virtualhosting mode use the SERVER_NAME variable as the hostname key. If you want to use the HTTP_HOST one (corresponding to the Host: header) add this option

.. seealso:: :doc:`VirtualHosting`


Clustering
^^^^^^^^^^

.. _OptionMulticast:

``multicast``
~~~~~~~~~~~~~
**Argument:** string

Subscribe to specified multicast group. internal option, usable by third party plugins.

.. _OptionMulticastTtl:

``multicast-ttl``
~~~~~~~~~~~~~~~~~
**Argument:** number

Set multicast ttl.

.. _OptionCluster:

``cluster``
~~~~~~~~~~~
**Argument:** string

Join specified uWSGI cluster.

.. _OptionClusterNodes:

``cluster-nodes``
~~~~~~~~~~~~~~~~~
**Argument:** *address:port*

Get nodes list from the specified cluster without joining it.

This list is used internally by the uwsgi load balancing api.

.. _OptionClusterReload:

``cluster-reload``
~~~~~~~~~~~~~~~~~~
**Argument:** *address:port*

Send a graceful reload message to the cluster.

.. _OptionClusterLog:

``cluster-log``
~~~~~~~~~~~~~~~
**Argument:** *address:port*

Send a log line to the cluster.

For instance, ``--cluster-log "Hello, world!"`` will print that to each cluster node's log file.


Subscriptions
^^^^^^^^^^^^^

.. seealso::

   :doc:`SubscriptionServer`

.. _OptionSubscriptionsSignCheck:

``subscriptions-sign-check``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Set digest algorithm and certificate directory for secured subscription system.

.. _OptionSubscriptionsSignCheckTolerance:

``subscriptions-sign-check-tolerance``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set the maximum tolerance (in seconds) of clock skew for secured subscription system.

.. _OptionSubscriptionAlgo:

``subscription-algo``
~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Set load balancing algorithm for the subscription system.

.. _OptionSubscriptionDotsplit:

``subscription-dotsplit``
~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Try to fallback to the next part (dot based) in subscription key.

.. _OptionSubscribeTo:

``subscribe-to``, ``st``, ``subscribe``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Subscribe to the specified subscription server.

*This option may be declared multiple times.*

.. _OptionSubscribeFreq:

``subscribe-freq``
~~~~~~~~~~~~~~~~~~
**Argument:** number

Send subscription announce at the specified interval.

.. _OptionSubscriptionTolerance:

``subscription-tolerance``
~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set tolerance for subscription servers.

.. _OptionUnsubscribeOnGracefulReload:

``unsubscribe-on-graceful-reload``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Force unsubscribe request even during graceful reload.


Router
^^^^^^

.. seealso::

   :doc:`InternalRouting`

.. _OptionRoute:

``route``
~~~~~~~~~
**Argument:** string

Add a route.

*This option may be declared multiple times.*

.. _OptionRouteHost:

``route-host``
~~~~~~~~~~~~~~
**Argument:** string

Add a route based on Host header.

*This option may be declared multiple times.*

.. _OptionRouteUri:

``route-uri``
~~~~~~~~~~~~~
**Argument:** string

Add a route based on REQUEST_URI.

*This option may be declared multiple times.*

.. _OptionRouteQs:

``route-qs``
~~~~~~~~~~~~
**Argument:** string

Add a route based on QUERY_STRING.

*This option may be declared multiple times.*

.. _OptionRouterList:

``router-list``, ``routers-list``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

List enabled routers.


.. _OptionsStatic:

Static files
^^^^^^^^^^^^

.. _OptionStaticCheck:

``static-check``, ``check-static``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Check for static files in the specified directory.

*This option may be declared multiple times.*

Specify a directory that uWSGI will check before passing control to a specific handler.

uWSGI will check if the requested ``PATH_INFO`` has a file correspondence in this directory and serve it.

For example, with ``check-static /var/www/example.com``, uWSGI will check if :file:`/var/www/example.com/foo.png` exists and directly serve it using `sendfile()` (or another configured method).


.. _OptionCheckStaticDocroot:

``check-static-docroot``
~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Check for static files in the requested DOCUMENT_ROOT.

.. _OptionStaticMap:

``static-map``
~~~~~~~~~~~~~~
**Argument:** string

Map mountpoint to static directory (or file).

*This option may be declared multiple times.*

Whenever a PATH_INFO starts with one of the configured resources, uWSGI will serve the file as a static file.

.. _OptionStaticMap2:

``static-map2``
~~~~~~~~~~~~~~~
**Argument:** string

Map mountpoint to static directory (or file), completely appending the requested resource to the docroot.

*This option may be declared multiple times.*

.. _OptionStaticSkipExt:

``static-skip-ext``
~~~~~~~~~~~~~~~~~~~
**Argument:** string

Skip specified extension from staticfile checks.

*This option may be declared multiple times.*

.. _OptionStaticIndex:

``static-index``
~~~~~~~~~~~~~~~~
**Argument:** string

Search for specified file if a directory is requested.

*This option may be declared multiple times.*

With ``static-index=index.html``, if the client asks for ``/doc/`` then uWSGI will check for ``/doc/index.html`` and if it exists it will be served to the client.

.. _OptionMimefile:

``mimefile``, ``mime-file``
~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Set mime types file path (default /etc/mime.types).

*This option may be declared multiple times.*

.. _OptionStaticExpiresType:

``static-expires-type``
~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Set the Expires header based on content type (syntax: Content-type=Expires).

*This option may be declared multiple times.*

.. _OptionStaticExpiresTypeMtime:

``static-expires-type-mtime``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Set the Expires header based on content type and file mtime (syntax: Content-type=Expires).

*This option may be declared multiple times.*

.. _OptionStaticExpires:

``static-expires``
~~~~~~~~~~~~~~~~~~
**Argument:** string

Set the Expires header based on filename regexp (syntax x=y).

*This option may be declared multiple times.*

.. _OptionStaticExpiresMtime:

``static-expires-mtime``
~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Set the Expires header based on filename regexp and file mtime (syntax x=y).

*This option may be declared multiple times.*

.. _OptionStaticExpiresUri:

``static-expires-uri``
~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Set the Expires header based on REQUEST_URI regexp (syntax x=y).

*This option may be declared multiple times.*

.. _OptionStaticExpiresUriMtime:

``static-expires-uri-mtime``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Set the Expires header based on REQUEST_URI regexp and file mtime (syntax x=y).

*This option may be declared multiple times.*

.. _OptionStaticExpiresPathInfo:

``static-expires-path-info``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Set the Expires header based on PATH_INFO regexp (syntax x=y).

*This option may be declared multiple times.*

.. _OptionStaticExpiresPathInfoMtime:

``static-expires-path-info-mtime``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Set the Expires header based on PATH_INFO regexp and file mtime (syntax x=y).

*This option may be declared multiple times.*

.. _OptionStaticOffloadToThread:

``static-offload-to-thread``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Offload static file serving to a thread (upto the specified number of threads).

.. _OptionFileServeMode:

``file-serve-mode``
~~~~~~~~~~~~~~~~~~~
**Argument:** string

Set static file serving mode (x-sendfile, nginx, ...).

Set the static serving mode:

* ``x-sendfile`` will use the X-Sendfile header supported by Apache, Cherokee, lighttpd
* ``x-accel-redirect`` will use the X-Accel-Redirect header supported by Nginx

By default the `sendfile()` syscall is used.


.. _OptionCheckCache:

``check-cache``
~~~~~~~~~~~~~~~
**Argument:** no argument

Check for response data in the cache based on PATH_INFO.


Clocks
^^^^^^

.. _OptionClock:

``clock``
~~~~~~~~~
**Argument:** string

Set a clock source.

.. _OptionClockList:

``clock-list``, ``clocks-list``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

List enabled clocks.


Loop engines
^^^^^^^^^^^^

.. _OptionLoop:

``loop``
~~~~~~~~
**Argument:** string

Select the uWSGI loop engine (advanced).

.. seealso:: :doc:`LoopEngine`

.. _OptionLoopList:

``loop-list``, ``loops-list``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

List enabled loop engines.



.. _OptionsAsync:

Greenlet
^^^^^^^^

.. seealso::

   :doc:`Greenlet`

.. _OptionGreenlet:

``greenlet``
~~~~~~~~~~~~
**Argument:** no argument

Enable greenlet as suspend engine.


Gevent
^^^^^^

.. seealso::

   :doc:`Gevent`

.. _OptionGevent:

``gevent``
~~~~~~~~~~
**Argument:** number

A shortcut enabling gevent loop engine with the specified number of async cores and optimal parameters.


Stackless
^^^^^^^^^

.. seealso::

   :doc:`Stackless`

.. _OptionStackless:

``stackless``
~~~~~~~~~~~~~
**Argument:** no argument

Use stackless as suspend engine.


uGreen
^^^^^^

.. seealso::

   :doc:`uGreen`

.. _OptionUgreen:

``ugreen``
~~~~~~~~~~
**Argument:** no argument

Enable uGreen as suspend/resume engine.

.. _OptionUgreenStacksize:

``ugreen-stacksize``
~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set ugreen stack size in pages.



.. _OptionsCarbon:

Carbon
^^^^^^

.. seealso::

   :doc:`Carbon`

.. _OptionCarbon:

``carbon``
~~~~~~~~~~
**Argument:** *host:port*

Push statistics to the specified carbon server/port.

*This option may be declared multiple times.*

.. _OptionCarbonTimeout:

``carbon-timeout``
~~~~~~~~~~~~~~~~~~
**Argument:** number
**Default:** 3

Set Carbon connection timeout in seconds.

.. _OptionCarbonFreq:

``carbon-freq``
~~~~~~~~~~~~~~~
**Argument:** number
**Default:** 60

Set Carbon push frequency in seconds.

.. _OptionCarbonId:

``carbon-id``
~~~~~~~~~~~~~
**Argument:** string

Set the identifier for Carbon metrics (by default the first uWSGI socket name).

.. _OptionCarbonNoWorkers:

``carbon-no-workers``
~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Disable generation of single worker metrics.

.. _OptionCarbonMaxRetry:

``carbon-max-retry``
~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set maximum number of retries in case of connection errors (default 1).

.. _OptionCarbonRetryDelay:

``carbon-retry-delay``
~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set connection retry delay in seconds (default 7).



.. _OptionsCGI:

Config
^^^^^^

.. seealso::

   :doc:`CGI`

.. _OptionCgi:

``cgi``
~~~~~~~
**Argument:** *[mountpoint=]script*

Add a CGI directory/script with optional mountpoint (URI prefix).

.. _OptionCgiMapHelper:

``cgi-map-helper``, ``cgi-helper``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** *extension=helper-executable*

Add a cgi helper to map an extension into an executable.

.. _OptionCgiFromDocroot:

``cgi-from-docroot``
~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Blindly enable cgi in DOCUMENT_ROOT.

.. _OptionCgiBufferSize:

``cgi-buffer-size``
~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set the CGI buffer size.

.. _OptionCgiTimeout:

``cgi-timeout``
~~~~~~~~~~~~~~~
**Argument:** number

Set CGI script timeout.

.. _OptionCgiIndex:

``cgi-index``
~~~~~~~~~~~~~
**Argument:** string

Add a CGI index file.

*This option may be declared multiple times.*

.. _OptionCgiAllowedExt:

``cgi-allowed-ext``
~~~~~~~~~~~~~~~~~~~
**Argument:** string

Allowed extensions for CGI.

*This option may be declared multiple times.*

.. _OptionCgiUnset:

``cgi-unset``
~~~~~~~~~~~~~
**Argument:** string

Unset specified environment variables before running CGI executable.

*This option may be declared multiple times.*

.. _OptionCgiLoadlib:

``cgi-loadlib``
~~~~~~~~~~~~~~~
**Argument:** string

Load a CGI shared library/optimizer.

*This option may be declared multiple times.*

.. _OptionCgiOptimize:

``cgi-optimize``, ``cgi-optimized``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Enable CGI realpath() optimizer.

.. _OptionCgiPathInfo:

``cgi-path-info``
~~~~~~~~~~~~~~~~~
**Argument:** no argument

Disable PATH_INFO management in CGI scripts.



.. _OptionsCheaper:

Busyness Cheaper algorithm
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. seealso::

   :doc:`Cheaper`

.. _OptionCheaperBusynessMax:

``cheaper-busyness-max``
~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set the cheaper busyness high percent limit, above that value worker is considered loaded (default 50).

.. _OptionCheaperBusynessMin:

``cheaper-busyness-min``
~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set the cheaper busyness low percent limit, belowe that value worker is considered idle (default 25).

.. _OptionCheaperBusynessMultiplier:

``cheaper-busyness-multiplier``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set initial cheaper multiplier, worker needs to be idle for cheaper-overload*multiplier seconds to be cheaped (default 10).

.. _OptionCheaperBusynessPenalty:

``cheaper-busyness-penalty``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Penalty for respawning workers to fast, it will be added to the current multiplier value if worker is cheaped and than respawned back too fast (default 2).

.. _OptionCheaperBusynessVerbose:

``cheaper-busyness-verbose``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Enable verbose log messages from busyness algorithm.

.. _OptionCheaperBusynessBacklogAlert:

``cheaper-busyness-backlog-alert``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Spawn emergency worker if anytime listen queue is higher than this value (default 33) (Linux only).

.. _OptionCheaperBusynessBacklogMultiplier:

``cheaper-busyness-backlog-multiplier``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set cheaper multiplier used for emergency workers (default 3) (Linux only).

.. _OptionCheaperBusynessBacklogStep:

``cheaper-busyness-backlog-step``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Number of emergency workers to spawn at a time (default 1) (Linux only).



.. _OptionsErlang:

Erlang
^^^^^^

.. seealso::

   :doc:`Erlang`

.. _OptionErlang:

``erlang``
~~~~~~~~~~
**Argument:** string

Spawn an Erlang c-node.

.. _OptionErlangCookie:

``erlang-cookie``
~~~~~~~~~~~~~~~~~
**Argument:** string

Set Erlang cookie.



.. _OptionsFastrouter:

Fastrouter
^^^^^^^^^^

.. seealso::

   :doc:`Fastrouter`

.. _OptionFastrouter:

``fastrouter``
~~~~~~~~~~~~~~
**Argument:** *address:port*

Run the fastrouter (uwsgi protocol proxy/load balancer) on the specified address:port.

.. _OptionFastrouterProcesses:

``fastrouter-processes``, ``fastrouter-workers``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Prefork the specified number of fastrouter processes.

.. _OptionFastrouterZerg:

``fastrouter-zerg``
~~~~~~~~~~~~~~~~~~~
**Argument:** *corerouter zerg*

Attach the fastrouter to a zerg server.

.. _OptionFastrouterUseCache:

``fastrouter-use-cache``
~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Use uWSGI cache as hostname->server mapper for the fastrouter.

.. _OptionFastrouterUsePattern:

``fastrouter-use-pattern``
~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** *corerouter use pattern*

Use a pattern for fastrouter hostname->server mapping.

.. _OptionFastrouterUseBase:

``fastrouter-use-base``
~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** *corerouter use base*

Use a base dir for fastrouter hostname->server mapping.

.. _OptionFastrouterFallback:

``fastrouter-fallback``
~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Fallback to the specified node in case of error.

*This option may be declared multiple times.*

.. _OptionFastrouterUseCluster:

``fastrouter-use-cluster``
~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Load balance to nodes subscribed to the cluster.

.. _OptionFastrouterUseCodeString:

``fastrouter-use-code-string``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** *corerouter cs*

Use code string as hostname->server mapper for the fastrouter.

.. _OptionFastrouterUseSocket:

``fastrouter-use-socket``
~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** optional *corerouter use socket*

Forward request to the specified uwsgi socket.

.. _OptionFastrouterTo:

``fastrouter-to``
~~~~~~~~~~~~~~~~~
**Argument:** string

Forward requests to the specified uwsgi server (you can specify it multiple times for load balancing).

*This option may be declared multiple times.*

.. _OptionFastrouterGracetime:

``fastrouter-gracetime``
~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Retry connections to dead static nodes after the specified amount of seconds.

.. _OptionFastrouterEvents:

``fastrouter-events``
~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set the maximum number of concurrent events the fastrouter can return in one cycle.

.. _OptionFastrouterQuiet:

``fastrouter-quiet``
~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Do not report failed connections to instances.

.. _OptionFastrouterCheap:

``fastrouter-cheap``
~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Run the fastrouter in cheap mode (do not respond to requests unless a node is available).

.. _OptionFastrouterSubscriptionServer:

``fastrouter-subscription-server``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** *corerouter ss*

Add a Subscription Server to the fastrouter to build the hostname:address map.

.. seealso:: :doc:`SubscriptionServer`

.. _OptionFastrouterTimeout:

``fastrouter-timeout``
~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set the internal fastrouter timeout.

.. _OptionFastrouterPostBuffering:

``fastrouter-post-buffering``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Enable fastrouter post buffering.

.. _OptionFastrouterPostBufferingDir:

``fastrouter-post-buffering-dir``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Put fastrouter buffered files to the specified directory.

.. _OptionFastrouterStats:

``fastrouter-stats``, ``fastrouter-stats-server``, ``fastrouter-ss``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Run the fastrouter stats server.

.. _OptionFastrouterHarakiri:

``fastrouter-harakiri``
~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Enable fastrouter harakiri.



.. _OptionsHTTP:

HTTP
^^^^

.. seealso::

   :doc:`HTTP`

.. _OptionHttp:

``http``
~~~~~~~~
**Argument:** *address*

Enable the embedded HTTP router/server/gateway/loadbalancer/proxy on the specified address.

.. _OptionHttpProcesses:

``http-processes``, ``http-workers``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set the number of http processes to spawn.

.. _OptionHttpVar:

``http-var``
~~~~~~~~~~~~
**Argument:** string

Add a key=value item to the generated uwsgi packet.

*This option may be declared multiple times.*

.. _OptionHttpTo:

``http-to``
~~~~~~~~~~~
**Argument:** string

Forward requests to the specified node (you can specify it multiple time for lb).

*This option may be declared multiple times.*

.. _OptionHttpZerg:

``http-zerg``
~~~~~~~~~~~~~
**Argument:** *corerouter zerg*

Attach the http router to a zerg server.

.. _OptionHttpFallback:

``http-fallback``
~~~~~~~~~~~~~~~~~
**Argument:** string

Fallback to the specified node in case of error.

*This option may be declared multiple times.*

.. _OptionHttpModifier1:

``http-modifier1``
~~~~~~~~~~~~~~~~~~
**Argument:** number

Set uwsgi protocol modifier1.

.. _OptionHttpUseCache:

``http-use-cache``
~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Use uWSGI cache as key->value virtualhost mapper.

.. _OptionHttpUsePattern:

``http-use-pattern``
~~~~~~~~~~~~~~~~~~~~
**Argument:** *corerouter use pattern*

Use the specified pattern for mapping requests to unix sockets.

.. _OptionHttpUseBase:

``http-use-base``
~~~~~~~~~~~~~~~~~
**Argument:** *corerouter use base*

Use the specified base for mapping requests to unix sockets.

.. _OptionHttpUseCluster:

``http-use-cluster``
~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Load balance to nodes subscribed to the cluster.

.. _OptionHttpEvents:

``http-events``
~~~~~~~~~~~~~~~
**Argument:** number

Set the number of concurrent http async events.

.. _OptionHttpSubscriptionServer:

``http-subscription-server``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** *corerouter ss*

Enable the SubscriptionServer for clustering and massive hosting/load-balancing.

.. _OptionHttpTimeout:

``http-timeout``
~~~~~~~~~~~~~~~~
**Argument:** number

Set internal http socket timeout.

.. _OptionHttpManageExpect:

``http-manage-expect``
~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Manage the Expect HTTP request header.

.. _OptionHttpKeepalive:

``http-keepalive``
~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Support HTTP keepalive (non-pipelined) requests (requires backend support).

.. _OptionHttpRawBody:

``http-raw-body``
~~~~~~~~~~~~~~~~~
**Argument:** no argument

Blindly send HTTP body to backends (required for WebSockets and Icecast support).

.. _OptionHttpUseCodeString:

``http-use-code-string``
~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** *corerouter cs*

Use code string as hostname->server mapper for the http router.

.. _OptionHttpUseSocket:

``http-use-socket``
~~~~~~~~~~~~~~~~~~~
**Argument:** optional *corerouter use socket*

Forward request to the specified uwsgi socket.

.. _OptionHttpGracetime:

``http-gracetime``
~~~~~~~~~~~~~~~~~~
**Argument:** number

Retry connections to dead static nodes after the specified amount of seconds.

.. _OptionHttpQuiet:

``http-quiet``
~~~~~~~~~~~~~~
**Argument:** no argument

Do not report failed connections to instances.

.. _OptionHttpCheap:

``http-cheap``
~~~~~~~~~~~~~~
**Argument:** no argument

Run the http router in cheap mode.

.. _OptionHttpStats:

``http-stats``, ``http-stats-server``, ``http-ss``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Run the http router stats server.

.. _OptionHttpHarakiri:

``http-harakiri``
~~~~~~~~~~~~~~~~~
**Argument:** number

Enable http router harakiri.


HTTPS
^^^^^

.. seealso::

   :doc:`HTTPS`

.. _OptionHttps:

``https``
~~~~~~~~~
**Argument:** *https config*

Add an https router/server on the specified address with specified certificate and key.

.. _OptionHttpsExportCert:

``https-export-cert``
~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Export uwsgi variable HTTPS_CC containing the raw client certificate.

.. _OptionHttpToHttps:

``http-to-https``
~~~~~~~~~~~~~~~~~
**Argument:** *address*

Add an HTTP router/server on the specified address and redirect all of the requests to HTTPS.



.. _OptionsJVM:

JVM
^^^

.. seealso::

   :doc:`JVM`

.. _OptionJvmMainClass:

``jvm-main-class``
~~~~~~~~~~~~~~~~~~
**Argument:** string

Load the specified class.

.. _OptionJvmClasspath:

``jvm-classpath``
~~~~~~~~~~~~~~~~~
**Argument:** string

Add the specified directory to the classpath.

*This option may be declared multiple times.*



.. _OptionsLua:

Lua
^^^

.. seealso::

   :doc:`Lua`

.. _OptionLua:

``lua``
~~~~~~~
**Argument:** string

Load lua wsapi app.



.. _OptionsNagios:

Nagios output
^^^^^^^^^^^^^

.. seealso::

   :doc:`Nagios`

.. _OptionNagios:

``nagios``
~~~~~~~~~~
**Argument:** no argument

Output Nagios-friendly status check information.



.. _OptionsPAM:

PAM
^^^

.. seealso::

   :doc:`PAM`

.. _OptionPam:

``pam``
~~~~~~~
**Argument:** string

Set the pam service name to use.

.. _OptionPamUser:

``pam-user``
~~~~~~~~~~~~
**Argument:** string

Set a fake user for pam.



.. _OptionsPerl:

Perl
^^^^

.. seealso::

   :doc:`Perl`

.. _OptionPsgi:

``psgi``
~~~~~~~~
**Argument:** string

Load a psgi app.

.. _OptionPerlNoDieCatch:

``perl-no-die-catch``
~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Do not catch $SIG{__DIE__}.

.. _OptionPerlLocalLib:

``perl-local-lib``
~~~~~~~~~~~~~~~~~~
**Argument:** string

Set perl locallib path.



.. _OptionsPHP:

PHP
^^^

.. seealso::

   :doc:`PHP`

.. _OptionPhpIni:

``php-ini``, ``php-config``
~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** *php ini*

Use this PHP.ini.

.. _OptionPhpIniAppend:

``php-ini-append``, ``php-config-append``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Append this (these) php.inis to the first one.

*This option may be declared multiple times.*

.. _OptionPhpSet:

``php-set``
~~~~~~~~~~~
**Argument:** *key=value*

Set a php config directive.

*This option may be declared multiple times.*

.. _OptionPhpIndex:

``php-index``
~~~~~~~~~~~~~
**Argument:** string

Set the file to open (like index.php) when a directory is requested.

*This option may be declared multiple times.*

.. _OptionPhpDocroot:

``php-docroot``
~~~~~~~~~~~~~~~
**Argument:** string

Force php DOCUMENT_ROOT.

.. _OptionPhpAllowedDocroot:

``php-allowed-docroot``
~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Add an allowed document root. Only scripts under these directories will be executed.

*This option may be declared multiple times.*

.. _OptionPhpAllowedExt:

``php-allowed-ext``
~~~~~~~~~~~~~~~~~~~
**Argument:** string

Add an allowed php file extension. Only scripts ending with these extensions will run.

*This option may be declared multiple times.*

.. _OptionPhpServerSoftware:

``php-server-software``
~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Force the SERVER_SOFTWARE value reported to PHP.

.. _OptionPhpApp:

``php-app``
~~~~~~~~~~~
**Argument:** string

Run _only_ this file whenever a request to the PHP plugin is made.

.. _OptionPhpDumpConfig:

``php-dump-config``
~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Dump php config (even if modified via --php-set or append options).



.. _OptionsPing:

Ping
^^^^

.. seealso::

   :doc:`Ping`

.. _OptionPing:

``ping``
~~~~~~~~
**Argument:** string

Ping specified uwsgi host.

If the ping is successful the process exits with a 0 code, otherwise with a value > 0.

.. _OptionPingTimeout:

``ping-timeout``
~~~~~~~~~~~~~~~~
**Argument:** number
**Default:** 3

Set ping timeout.

The maximum number of seconds to wait before considering a uWSGI instance dead



.. _OptionsPython:

Python
^^^^^^

.. seealso::

   :doc:`Python`

.. _OptionWsgiFile:

``wsgi-file``, ``file``
~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Load .wsgi file as the Python application.

.. _OptionEval:

``eval``
~~~~~~~~
**Argument:** string

Evaluate Python code as WSGI entry point.

.. _OptionModule:

``module``, ``wsgi``
~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Load a WSGI module as the application. The module (sans ``.py``) must be importable, ie. be in ``PYTHONPATH``.

This option may be set with ``-w`` from the command line.

.. _OptionCallable:

``callable``
~~~~~~~~~~~~
**Argument:** string
**Default:** application

Set default WSGI callable name.

.. _OptionTest:

``test``
~~~~~~~~
**Argument:** string

Test a module import.

This option may be set with ``-J`` from the command line.

.. _OptionHome:

``home``, ``virtualenv``, ``venv``, ``pyhome``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Set PYTHONHOME/virtualenv.

This option may be set with ``-H`` from the command line.

.. seealso:: :doc:`Virtualenv`

.. _OptionPyProgramname:

``py-programname``, ``py-program-name``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Set python program name.

.. _OptionPythonpath:

``pythonpath``, ``python-path``, ``pp``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** *directory/glob*

Add directory (or an .egg or a glob) to the Python search path. This can be specified up to 64 times.

*This option may be declared multiple times.*

.. _OptionPymoduleAlias:

``pymodule-alias``
~~~~~~~~~~~~~~~~~~
**Argument:** string

Add a python alias module.

*This option may be declared multiple times.*

.. seealso:: :doc:`PyModuleAlias`

.. _OptionPostPymoduleAlias:

``post-pymodule-alias``
~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Add a python module alias after uwsgi module initialization.

*This option may be declared multiple times.*

.. _OptionImport:

``import``, ``pyimport``, ``py-import``, ``python-import``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Import a python module.

*This option may be declared multiple times.*

.. _OptionSharedImport:

``shared-import``, ``shared-pyimport``, ``shared-py-import``, ``shared-python-import``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Import a python module in all of the processes.

*This option may be declared multiple times.*

.. _OptionSpoolerImport:

``spooler-import``, ``spooler-pyimport``, ``spooler-py-import``, ``spooler-python-import``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Import a python module in the spooler.

*This option may be declared multiple times.*

.. _OptionPyargv:

``pyargv``
~~~~~~~~~~
**Argument:** string

Manually set ``sys.argv`` for python apps.

``pyargv="one two three"`` will set ``sys.argv`` to ``('one', 'two', 'three')``.

.. _OptionOptimize:

``optimize``
~~~~~~~~~~~~
**Argument:** number

Set python optimization level (this may be dangerous for some apps).

This option may be set with ``-O`` from the command line.

.. _OptionPaste:

``paste``
~~~~~~~~~
**Argument:** string

Load a paste.deploy config file.

.. seealso:: :doc:`PythonPaste`

.. _OptionPasteLogger:

``paste-logger``
~~~~~~~~~~~~~~~~
**Argument:** no argument

Enable paste fileConfig logger.

.. _OptionWeb3:

``web3``
~~~~~~~~
**Argument:** string

Load a web3 app.

.. _OptionPump:

``pump``
~~~~~~~~
**Argument:** string

Load a pump app.

.. _OptionWsgiLite:

``wsgi-lite``
~~~~~~~~~~~~~
**Argument:** string

Load a wsgi-lite app.

.. _OptionIniPaste:

``ini-paste``
~~~~~~~~~~~~~
**Argument:** *paste .INI*

Load a paste.deploy config file containing uwsgi section.

.. _OptionIniPasteLogged:

``ini-paste-logged``
~~~~~~~~~~~~~~~~~~~~
**Argument:** *paste .INI*

Load a paste.deploy config file containing uwsgi section (load loggers too).

.. _OptionReloadOsEnv:

``reload-os-env``
~~~~~~~~~~~~~~~~~
**Argument:** no argument

Force reload of os.environ at each request.

.. _OptionNoSite:

``no-site``
~~~~~~~~~~~
**Argument:** no argument

Do not import site module.

.. _OptionPyshell:

``pyshell``
~~~~~~~~~~~
**Argument:** no argument

Run an interactive Python shell in the uWSGI environment.

.. _OptionPyshellOneshot:

``pyshell-oneshot``
~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Run an interactive Python shell in the uWSGI environment (one-shot variant).

.. _OptionPython:

``python``, ``py``, ``pyrun``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** *.py file*

Run a Python script in the uWSGI environment.

.. _OptionPyTracebacker:

``py-tracebacker``
~~~~~~~~~~~~~~~~~~
**Argument:** string

Enable the uWSGI Python tracebacker.

.. _OptionPyAutoReload:

``py-auto-reload``, ``py-autoreload``, ``python-auto-reload``, ``python-autoreload``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Monitor Python modules' modification times to trigger reload (use only in development).

.. _OptionPyAutoReloadIgnore:

``py-auto-reload-ignore``
~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Ignore the specified module during auto-reload scan.

*This option may be declared multiple times.*

.. _OptionWsgiEnvBehaviour:

``wsgi-env-behaviour``, ``wsgi-env-behavior``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Set the strategy for allocating/deallocating the WSGI env.

.. _OptionStart_ResponseNodelay:

``start_response-nodelay``
~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Send WSGI http headers as soon as possible (PEP violation).



.. _OptionsRawrouter:

Rawrouter
^^^^^^^^^

.. seealso::

   :doc:`Rawrouter`

.. _OptionRawrouter:

``rawrouter``
~~~~~~~~~~~~~
**Argument:** *corerouter*

Run the rawrouter on the specified port.

.. _OptionRawrouterProcesses:

``rawrouter-processes``, ``rawrouter-workers``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Prefork the specified number of rawrouter processes.

.. _OptionRawrouterZerg:

``rawrouter-zerg``
~~~~~~~~~~~~~~~~~~
**Argument:** *corerouter zerg*

Attach the rawrouter to a zerg server.

.. _OptionRawrouterUseCache:

``rawrouter-use-cache``
~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Use uWSGI cache as address->server mapper for the rawrouter.

.. _OptionRawrouterUsePattern:

``rawrouter-use-pattern``
~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** *corerouter use pattern*

Use a pattern for rawrouter address->server mapping.

.. _OptionRawrouterUseBase:

``rawrouter-use-base``
~~~~~~~~~~~~~~~~~~~~~~
**Argument:** *corerouter use base*

Use a base dir for rawrouter address->server mapping.

.. _OptionRawrouterFallback:

``rawrouter-fallback``
~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Fallback to the specified node in case of error.

*This option may be declared multiple times.*

.. _OptionRawrouterUseCluster:

``rawrouter-use-cluster``
~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Load balance to nodes subscribed to the cluster.

.. _OptionRawrouterUseCodeString:

``rawrouter-use-code-string``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** *corerouter cs*

Use code string as address->server mapper for the rawrouter.

.. _OptionRawrouterUseSocket:

``rawrouter-use-socket``
~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** optional *corerouter use socket*

Forward request to the specified uwsgi socket.

.. _OptionRawrouterTo:

``rawrouter-to``
~~~~~~~~~~~~~~~~
**Argument:** string

Forward requests to the specified uwsgi server (you can specify it multiple times for load balancing).

*This option may be declared multiple times.*

.. _OptionRawrouterGracetime:

``rawrouter-gracetime``
~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Retry connections to dead static nodes after the specified amount of seconds.

.. _OptionRawrouterEvents:

``rawrouter-events``
~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set the maximum number of concurrent events.

.. _OptionRawrouterQuiet:

``rawrouter-quiet``
~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Do not report failed connections to instances.

.. _OptionRawrouterCheap:

``rawrouter-cheap``
~~~~~~~~~~~~~~~~~~~
**Argument:** no argument

Run the rawrouter in cheap mode.

.. _OptionRawrouterSubscriptionServer:

``rawrouter-subscription-server``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** *corerouter ss*

Run the rawrouter subscription server on the spcified address.

.. _OptionRawrouterTimeout:

``rawrouter-timeout``
~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set rawrouter timeout.

.. _OptionRawrouterStats:

``rawrouter-stats``, ``rawrouter-stats-server``, ``rawrouter-ss``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Run the rawrouter stats server.

.. _OptionRawrouterHarakiri:

``rawrouter-harakiri``
~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Enable rawrouter harakiri.



.. _OptionsRrdtool:

RRDtool
^^^^^^^

.. seealso::

   :doc:`RRDtool`

.. _OptionRrdtool:

``rrdtool``
~~~~~~~~~~~
**Argument:** string

Collect request data in the specified rrd file.

*This option may be declared multiple times.*

.. _OptionRrdtoolFreq:

``rrdtool-freq``
~~~~~~~~~~~~~~~~
**Argument:** number

Set collect frequency.

.. _OptionRrdtoolMaxDs:

``rrdtool-max-ds``
~~~~~~~~~~~~~~~~~~
**Argument:** number

Set maximum number of data sources.



.. _OptionsRuby:

Ruby
^^^^

.. seealso::

   :doc:`Ruby`

.. _OptionRails:

``rails``
~~~~~~~~~
**Argument:** string

Load a Ruby on Rails <= 2.x app.

.. _OptionRack:

``rack``
~~~~~~~~
**Argument:** string

Load a Rack app.

.. _OptionRubyGcFreq:

``ruby-gc-freq``, ``rb-gc-freq``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set Ruby GC frequency.

.. _OptionRbRequire:

``rb-require``, ``ruby-require``, ``rbrequire``, ``rubyrequire``, ``require``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Import/require a Ruby module/script.

*This option may be declared multiple times.*

.. _OptionSharedRbRequire:

``shared-rb-require``, ``shared-ruby-require``, ``shared-rbrequire``, ``shared-rubyrequire``, ``shared-require``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** string

Import/require a Ruby module/script (shared).

*This option may be declared multiple times.*

.. _OptionGemset:

``gemset``, ``rvm``
~~~~~~~~~~~~~~~~~~~
**Argument:** string

Load the specified gemset (rvm).

.. _OptionRvmPath:

``rvm-path``
~~~~~~~~~~~~
**Argument:** string

Search for rvm in the specified directory.

*This option may be declared multiple times.*

.. _OptionRbshell:

``rbshell``
~~~~~~~~~~~
**Argument:** optional no argument

Run a Ruby/irb shell.

.. _OptionRbThreads:

``rb-threads``, ``rbthreads``, ``ruby-threads``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**Argument:** number

Set the number of Ruby threads to run (Ruby 1.9+).
